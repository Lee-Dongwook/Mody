version: "3.9"
services:
  mody:
    build:
      context: ./apps/mody
      dockerfile: Dockerfile
    container_name: mody
    env_file:
      - ./apps/mody/env
    expose:
      - "8000"
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 3
    volumes:
      - mody_logs: /app/logs
    logging:
      driver: "loki"
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./infra/logging/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - backend

  kong:
    image: kong:3.4-alpine
    container_name: kong
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    volumes:
      - ./infra/kong/kong.yml:/kong.yml
    command: kong start
    networks:
      - backend
    depends_on:
      - mody

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./apps/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./infra/certbot/www:/var/www/certbot
      - ./infra/certbot/conf:/etc/letsencrypt
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - kong
    networks:
      - backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 1m30s
      timeout: 30s
      retries: 3
    logging:
      driver: "loki"
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    networks:
      - backend
    depends_on:
      - prometheus

  volumes:
    mody_logs:
    nginx_logs:

  networks:
    backend:
      driver: bridge
